<?php

declare(strict_types=1);

namespace PHPOS\Assembly\Processor;

use PHPOS\Architecture\ArchitectureInterface;
use PHPOS\Bootloader\BootloaderInterface;
use PHPOS\Service\ServiceInterface;
use PHPOS\Service\Variable;

class Readable implements ProcessorInterface
{
    public function __construct(protected BootloaderInterface $bootloader, protected array $initializationServices = [], protected array $postServices = [])
    {
    }

    public function process(): string
    {
        $assembly = <<< __HEADER__
        ;
        ;                                  _     _          __             _____  _    _ _____         ____   _____
        ;     /\                          | |   | |        / _|           |  __ \| |  | |  __ \       / __ \ / ____|
        ;    /  \   ___ ___  ___ _ __ ___ | |__ | |_   _  | |_ ___  _ __  | |__) | |__| | |__) |_____| |  | | (___
        ;   / /\ \ / __/ __|/ _ \ '_ ` _ \| '_ \| | | | | |  _/ _ \| '__| |  ___/|  __  |  ___/______| |  | |\___ \
        ;  / ____ \\__ \__ \  __/ | | | | | |_) | | |_| | | || (_) | |    | |    | |  | | |          | |__| |____) |
        ; /_/    \_\___/___/\___|_| |_| |_|_.__/|_|\__, | |_| \___/|_|    |_|    |_|  |_|_|           \____/|_____/
        ;                                           __/ |
        ;                                          |___/
        ;
        ; Notice: This file is automatically generated by PHP-OS.
        ;         Do not edit this file. We cannot be held responsible if this is edited and overwritten again.
        ;


        __HEADER__;

        foreach ($this->initializationServices as [$service, $parameters]) {
            $service = new $service($this->bootloader, null, ...$parameters);

            assert($service instanceof ServiceInterface);
            $assembly .= $service->process()->assemble() . "\n";
        }

        foreach ($this->bootloader->architecture()->runtime()->definedVariables() as $value) {
            $assembly .= (new Variable(
                $this->bootloader,
                null,
                $value,
            ))->process()->assemble() . "\n";
        }

        foreach ($this->postServices as [$service, $parameters]) {
            $service = new $service($this->bootloader, null, ...$parameters);

            assert($service instanceof ServiceInterface);
            $assembly .= $service->process()->assemble() . "\n";
        }

        return $assembly;
    }
}
